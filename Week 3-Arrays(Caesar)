#include <cs50.h>
#include <ctype.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

void cipherText(int key, char *plainText, int lengthOfPText, char keyAsChar);

int main(int argc, string argv[])
{
    if (argc != 2)
    {
        printf("Non valid input\n");
        return 1;
    }
    int key = atoi(argv[1]);
    char keyAsChar = key + '0';

    if (key < 0)
    {
        printf("Non valid input\n");
        return 1;
    }

    for (int i = 0; argv[1][i] != '\0'; i++)
    {
        if (!isdigit(argv[1][i]))
        {
            printf("Usage: ./caesar key\n");
            return 1;
        }
    }
    string plainText = get_string("plain text: ");
    int lengthOfPText = strlen(plainText);
    cipherText(key, plainText, lengthOfPText, keyAsChar);

    return 0;
}

void cipherText(int key, char *plainText, int lengthOfPText, char keyAsChar)
{
    bool isUpper = false;
    char cipheredArray[lengthOfPText];
    int j = 0;
    for (int i = 0; i < lengthOfPText; i++)
    {
        isUpper = false;

        if (isalpha(plainText[i]))
        {

            if (plainText[i] >= 'A' && plainText[i] <= 'Z')
            {
                isUpper = true;
            }

            int shiftedValue = plainText[i] + key;
            char base = 'A';

            if (isUpper)
            {
                cipheredArray[j] = (shiftedValue - base + 26) % 26 + base;
            }
            else
            {
                base = 'a';
                cipheredArray[j] = (shiftedValue - base) % 26 + base;
            }

            j++;
        }
        else
        {
            cipheredArray[j] = plainText[i];
            j++;
        }
    }
    printf("ciphertext: ");
    for (int i = 0; i < j; i++)
    {
        printf("%c", cipheredArray[i]);
    }
    printf("\n");
}
